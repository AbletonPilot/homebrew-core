class Keploy < Formula
  desc "Testing Toolkit creates test-cases and data mocks from API calls, DB queries"
  homepage "https://keploy.io"
  url "https://github.com/keploy/keploy/archive/refs/tags/v2.11.1.tar.gz"
  sha256 "a7ac26062ae58ba7a0cd960b167e24953b121742918cd84f112369db1f939ab2"
  license "Apache-2.0"
  head "https://github.com/keploy/keploy.git", branch: "main"

  bottle do
    sha256 cellar: :any_skip_relocation, arm64_tahoe:   "c2f9eb36c0b5979ce842f0a4b07122d6de6616f59fed1a7c5b679c8a537b355b"
    sha256 cellar: :any_skip_relocation, arm64_sequoia: "c2f9eb36c0b5979ce842f0a4b07122d6de6616f59fed1a7c5b679c8a537b355b"
    sha256 cellar: :any_skip_relocation, arm64_sonoma:  "c2f9eb36c0b5979ce842f0a4b07122d6de6616f59fed1a7c5b679c8a537b355b"
    sha256 cellar: :any_skip_relocation, sonoma:        "4790c0fb6dfd44918b44c4dcb1a4e87cacfa15bedc3270d31bb192ca39a02e09"
    sha256 cellar: :any_skip_relocation, x86_64_linux:  "b189c3d59d227e6f0290ff8df72157b87cec24bce60c64265ae1503fd9c71e36"
  end

  depends_on "go" => :build

  def install
    system "go", "build", *std_go_args(ldflags: "-s -w -X main.version=#{version}")
  end

  test do
    system bin/"keploy", "config", "--generate", "--path", testpath
    assert_match "# Generated by Keploy", (testpath/"keploy.yml").read

    output = shell_output("#{bin}/keploy templatize --path #{testpath}")
    assert_match "No test sets found to templatize", output

    assert_match version.to_s, shell_output("#{bin}/keploy --version")
  end
end
