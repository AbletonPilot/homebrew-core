class Keploy < Formula
  desc "Testing Toolkit creates test-cases and data mocks from API calls, DB queries"
  homepage "https://keploy.io"
  url "https://github.com/keploy/keploy/archive/refs/tags/v2.10.25.tar.gz"
  sha256 "63482ca2d251c52e84771f05ab77e502bbec715204122d6431e58358baba4989"
  license "Apache-2.0"
  head "https://github.com/keploy/keploy.git", branch: "main"

  bottle do
    sha256 cellar: :any_skip_relocation, arm64_tahoe:   "7a011b72f0c1c23eb0b0dbb447ed2f9e8f9c7505c789cfab754bff7b794b51a5"
    sha256 cellar: :any_skip_relocation, arm64_sequoia: "7a011b72f0c1c23eb0b0dbb447ed2f9e8f9c7505c789cfab754bff7b794b51a5"
    sha256 cellar: :any_skip_relocation, arm64_sonoma:  "7a011b72f0c1c23eb0b0dbb447ed2f9e8f9c7505c789cfab754bff7b794b51a5"
    sha256 cellar: :any_skip_relocation, sonoma:        "8a784e86998ed80a5326528613c87cbb768ab421fff2695bbc5acc287fd227f0"
    sha256 cellar: :any_skip_relocation, x86_64_linux:  "6965199af48720d9f1ccab28c818b4d09f1b30bdd87a290486973338e4ac40b5"
  end

  depends_on "go" => :build

  def install
    system "go", "build", *std_go_args(ldflags: "-s -w -X main.version=#{version}")
  end

  test do
    system bin/"keploy", "config", "--generate", "--path", testpath
    assert_match "# Generated by Keploy", (testpath/"keploy.yml").read

    output = shell_output("#{bin}/keploy templatize --path #{testpath}")
    assert_match "No test sets found to templatize", output

    assert_match version.to_s, shell_output("#{bin}/keploy --version")
  end
end
